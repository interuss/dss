'To render with PlantUML:
'  java -jar plantuml.jar -o generated pool_add.puml
@startuml
participant "Existing USS 1" as USS1
participant "Existing USS N" as USS2
participant "USS 3" as USS3
participant "Pool state" as PoolState



note over PoolState: Pool verified with\nN instance

note over USS3: Initialize CA with dss-certs.sh
USS3 --> USS1: Provide ca.crt and\nYugabyte node addresses
note over USS1: Import new CA\nRestart Yugabyte nodes

USS3 --> USS2: Provide ca.crt and\nYugabyte node addresses
note over USS2: Import new CA\nRestart Yugabyte nodes

note over PoolState: Pool ready to accept\nnew instance

USS2 --> USS3: Provide pool CAs and\n existing Yugabyte node\n addresses (once)
note over USS3: Import pool CA

note over USS3: Use helm to deploy\nDSS instance

note over USS2: Allow new Yugabyte masters\nnodes (once)

note over PoolState: Pool ready with\nN+1 instances

note over USS1: Update Yugabyte masters nodes list\nRestart Yugabyte nodes
note over USS2: Update Yugabyte masters nodes list\nRestart Yugabyte nodes

note over USS3: Run prober on DSS instance\nto verify functionality
note over USS2: Run prober on DSS instance\nto verify no regression
note over USS2: USS 1 and/or USS N and/or\n USS 3 run interop test on\n DSS instances to verify\n functionality
note over PoolState: Pool verified with\nN+1 instances

@enduml
