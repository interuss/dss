openapi: 3.0.2
info:
  title: DSS Auxiliary API
  version: 1.1.0

components:
  schemas:
    VersionResponse:
      type: object
      required:
        - version
      properties:
        version:
          description: The version of the DSS.
          type: string
    ErrorResponse:
      type: object
      properties:
        message:
          description: Human-readable message indicating what error occurred and/or why.
          type: string

    DSSInstancesResponse:
      type: object
      properties:
        dss_instances:
          type: array
          items:
            $ref: '#/components/schemas/DSSInstance'
          default: []
    DSSInstance:
      type: object
      properties:
        id:
          description: Identity of this DSS instance participating in the pool (locality).
          type: string
        most_recent_heartbeat:
          description: Most recent heartbeat registered for this DSS instance.
          anyOf:
          - $ref: '#/components/schemas/Heartbeat'
      required:
      - id
    Heartbeat:
      type: object
      properties:
        timestamp:
          description: Time at which heartbeat was registered.
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        reporter:
          description: Identity (via access token `sub` claim) of client reporting the heartbeat, or omitted if no client reported the heartbeat.
          type: string
          example: 'uss1'
          default: ''
        source:
          description: Source/trigger of this heartbeat.
          type: string
          example: Startup
        index:
          description: Index of this heartbeat within the set of all heartbeats for this pool participant.
          type: integer
          format: int64
          minimum: 0
          example: 1
          default: 0
        next_heartbeat_expected_before:
          description: The time by which a new heartbeat should be registered for this DSS instance if the DSS instance operator's system is behaving correctly.
          type: string
          format: date-time
          example: '1985-04-12T23:45:00Z'
          default: ''
      required:
      - timestamp
      - source

paths:
  /aux/v1/version:
    get:
      tags: [ dss ]
      operationId: getVersion
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: The version of the DSS is successfully returned.
      summary: Queries the version of the DSS.
  /aux/v1/validate_oauth:
    get:
      tags: [ dss ]
      operationId: validateOauth
      parameters:
        - name: owner
          description: Validate the owner claim matches the provided owner.
          schema:
            type: string
          in: query
          required: true
      responses:
        '200':
          description: The provided token was validated.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bearer access token was not provided in Authorization header,
            token could not be decoded, or token was invalid.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The access token was decoded successfully but did not include
            a scope appropriate to this endpoint.
      summary: Validate Oauth token against the DSS.
      security:
        - Auth:
            - dss.read.identification_service_areas
        - Auth:
            - dss.write.identification_service_areas

  /aux/v1/pool/dss_instances:
    get:
      summary: Queries the current information for DSS instances participating in the pool.
      operationId: getDSSInstances
      tags: [ dss ]
      security:
      - Auth:
        - interuss.pool_status.read
      responses:
        '200':
          description: The known DSS instances participating in the pool are successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSSInstancesResponse'
        '401':
          description: >-
            Bearer access token was not provided in Authorization header, token
            could not be decoded, or token was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: >-
            The access token was decoded successfully but did not include a
            scope appropriate to this endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '501':
          description: >-
            The server has not implemented this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
security:
  - Auth:
      - dss.read.identification_service_areas
      - dss.write.identification_service_areas
      - interuss.pool_status.read
tags:
  - name: dss
    description: Endpoints exposed by the DSS server.
