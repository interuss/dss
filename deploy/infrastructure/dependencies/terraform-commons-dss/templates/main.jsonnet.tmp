// This file was automatically generated by terraform-commons-dss.
// Do not edit it directly.
local dss = import '../../../deploy/services/tanka/dss.libsonnet';
local metadataBase = import '../../../deploy/services/tanka/metadata_base.libsonnet';

// All VAR_* values below must be replaced with appropriate values; see
// dss/build/README.md for more information.

local metadata = metadataBase {
  namespace: '${VAR_NAMESPACE}',
  clusterName: '${VAR_CLUSTER_CONTEXT}',
  single_cluster: false,
  enableScd: ${VAR_ENABLE_SCD}, // <-- This boolean value is VAR_ENABLE_SCD
  cockroach+: {
    image: '${VAR_CRDB_DOCKER_IMAGE_NAME}',
    hostnameSuffix: '${VAR_DB_HOSTNAME_SUFFIX}',
    locality: '${VAR_LOCALITY}',
    nodeIPs: [${VAR_CRDB_NODE_IPS}],
    shouldInit: ${VAR_SHOULD_INIT},
    JoinExisting: [${VAR_CRDB_EXTERNAL_NODES}],
    storageClass: '${VAR_STORAGE_CLASS}',
  },
  backend+: {
    ipName: '${VAR_INGRESS_NAME}',
    %{if VAR_CLOUD_PROVIDER == "aws"}
    certName: '${VAR_CERT_NAME}',
    %{endif}
    image: '${VAR_DOCKER_IMAGE_NAME}',
    pubKeys: ['${VAR_PUBLIC_KEY_PEM_PATH}'],
    jwksEndpoint: '${VAR_JWKS_ENDPOINT}',
    jwksKeyIds: ['${VAR_JWKS_KEY_ID}'],
    hostname: '${VAR_APP_HOSTNAME}',
    dumpRequests: false,
    sslPolicy: '${VAR_SSL_POLICY}'
  },
  schema_manager+: {
    image: '${VAR_DOCKER_IMAGE_NAME}',
    desired_rid_db_version: '${VAR_DESIRED_RID_DB_VERSION}',
    desired_scd_db_version: '${VAR_DESIRED_SCD_DB_VERSION}',
  },
  prometheus+: {
    storageClass: '${VAR_STORAGE_CLASS}',
  },
  image_pull_secret: '${VAR_DOCKER_IMAGE_PULL_SECRET}',
  cloud_provider: '${VAR_CLOUD_PROVIDER}',
  %{if VAR_CLOUD_PROVIDER == "aws"}
  subnet: '${VAR_SUBNET}',
  %{endif}
};

dss.all(metadata)
