'To render with PlantUML:
'  java -jar plantuml.jar -o generated pool_new_3.puml
@startuml
participant "USS 1" as USS1
participant "USS 2" as USS2
participant "USS 3" as USS3
participant "Pool state" as PoolState


note over USS1: Initialize CA with dss-certs.sh
USS1 --> USS3: Provide ca.crt and\nYugabyte node addresses
USS1 --> USS2: Provide ca.crt and\nYugabyte node addresses


note over USS2: Initialize CA with dss-certs.sh
USS2 --> USS1: Provide ca.crt and\nYugabyte node addresses
USS2 --> USS3: Provide ca.crt and\nYugabyte node addresses


note over USS3: Initialize CA with dss-certs.sh

USS3 --> USS1: Provide ca.crt and\nYugabyte node addresses
USS3 --> USS2: Provide ca.crt and\nYugabyte node addresses

note over USS1: Import new CA
note over USS2: Import new CA
note over USS3: Import new CA


note over USS1: Use helm to deploy\nDSS instance
note over USS2: Use helm to deploy\nDSS instance
note over USS3: Use helm to deploy\nDSS instance

note over PoolState: Pool ready with\n3 instances


note over USS1: Run prober on DSS instance\nto verify functionality
note over USS2: Run prober on DSS instance\nto verify functionality
note over USS3: Run prober on DSS instance\nto verify functionality

note over USS2: USS 1 and/or USS N and/or\n USS 3 run interop test on\n DSS instances to verify\n functionality
note over PoolState: Pool verified with\n3 instances

@enduml

