# Brings up a full stand-alone DSS sandbox environment with locally-built dss
# and dummy-oauth InterUSS images.

# To bring up this system, see standalone_instance.md.

version: '3.8'

services:

  local-dss-crdb:
    image: cockroachdb/cockroach:v24.1.3
    command: start-single-node --insecure
    ports:
      - "26257:26257"
      - "8080:8080"
    restart: always
    networks:
      - dss_sandbox_default_network
    healthcheck:
      test: curl -f 'http://localhost:8080/health?ready=1' || exit 1
      interval: 3m
      start_period: 30s
      start_interval: 5s

  local-dss-ybdb:
    image: yugabytedb/yugabyte:2024.1.2.0-b77
    # ysql_output_buffer_size needs to be increased to allow ysql to retry read restart errors. https://docs.yugabyte.com/preview/reference/configuration/yb-tserver/#ysql-output-buffer-size
    command: bin/yugabyted start --background=false --tserver_flags="ysql_output_buffer_size=1048576"
    ports:
      - "7000:7000"
      - "9000:9000"
      - "15433:15433"
      - "5433:5433"
      - "9042:9042"
    restart: always
    networks:
      - dss_sandbox_default_network
    profiles: ["with-yugabyte"]
    healthcheck:
      test: ["CMD", "/home/yugabyte/postgres/bin/pg_isready", "-h", "local-dss-ybdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  local-dss-rid-bootstrapper-ybdb:
    build:
      context: ../..
      dockerfile: Dockerfile
    image: interuss-local/dss
    command: /usr/bin/db-manager migrate --schemas_dir=/db-schemas/yugabyte/rid --db_version "latest" --datastore_host local-dss-ybdb --datastore_user yugabyte --datastore_port 5433
    depends_on:
      local-dss-ybdb:
        condition: service_healthy
    networks:
      - dss_sandbox_default_network
    profiles: ["with-yugabyte"]

  local-dss-scd-bootstrapper-ybdb:
    build:
      context: ../..
      dockerfile: Dockerfile
    image: interuss-local/dss
    entrypoint: /usr/bin/db-manager migrate --schemas_dir=/db-schemas/yugabyte/scd --db_version "latest" --datastore_host local-dss-ybdb --datastore_user yugabyte --datastore_port 5433
    depends_on:
      local-dss-ybdb:
        condition: service_healthy
    networks:
      - dss_sandbox_default_network
    profiles: ["with-yugabyte"]

  local-dss-rid-bootstrapper:
    build:
      context: ../..
      dockerfile: Dockerfile
    image: interuss-local/dss
    command: /usr/bin/db-manager migrate --schemas_dir=/db-schemas/rid --db_version "latest" --datastore_host local-dss-crdb
    depends_on:
      local-dss-crdb:
        condition: service_healthy
    networks:
      - dss_sandbox_default_network

  local-dss-scd-bootstrapper:
    build:
      context: ../..
      dockerfile: Dockerfile
    image: interuss-local/dss
    entrypoint: /usr/bin/db-manager migrate --schemas_dir=/db-schemas/scd --db_version "latest" --datastore_host local-dss-crdb
    depends_on:
      local-dss-crdb:
        condition: service_healthy
    networks:
      - dss_sandbox_default_network

  local-dss-core-service:
    build:
      context: ../..
      dockerfile: Dockerfile
    image: interuss-local/dss
    volumes:
      - $PWD/../test-certs:/var/test-certs:ro
      - $PWD/startup/core_service.sh:/startup/core_service.sh:ro
    environment:
      COMPOSE_PROFILES: ${COMPOSE_PROFILES}
    command: /startup/core_service.sh ${DEBUG_ON:-0}
    ports:
      - "4000:4000"
      - "8082:8082"
    depends_on:
      local-dss-rid-bootstrapper:
        condition: service_completed_successfully
      local-dss-scd-bootstrapper:
        condition: service_completed_successfully
      local-dss-rid-bootstrapper-ybdb:
        condition: service_completed_successfully
        required: false
      local-dss-scd-bootstrapper-ybdb:
        condition: service_completed_successfully
        required: false
    networks:
      - dss_sandbox_default_network
    healthcheck:
      test: wget -O - 'http://localhost/healthy' || exit 1
      interval: 3m
      start_period: 30s
      start_interval: 5s
    profiles: ["", "with-yugabyte"]

  local-dss-dummy-oauth:
    build:
      context: ../..
      dockerfile: cmds/dummy-oauth/Dockerfile
    image: interuss-local/dummy-oauth
    command: -private_key_file /var/test-certs/auth2.key
    ports:
      - "8085:8085"
    networks:
      - dss_sandbox_default_network
    healthcheck:
      test: wget -O - 'http://localhost:8085/token?intended_audience=-&scope=-' || exit 1
      interval: 3m
      start_period: 30s
      start_interval: 5s

networks:
  dss_sandbox_default_network:
    name: dss_sandbox-default

volumes:
  local-dss-data:
